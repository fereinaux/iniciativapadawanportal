@using Utils.Extensions;
@using Microsoft.AspNet.Identity
@using Utils.Constants;

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.35.0/codemirror.css" crossorigin="anonymous" referrerpolicy="no-referrer" />
<link rel="stylesheet" href="https://codemirror.net/theme/dracula.css">
<div class="row wrapper border-bottom white-bg page-heading">
    <div class="col-lg-10">
        <h2>@ViewBag.Title</h2>
        <ol class="breadcrumb">
            <li class="breadcrumb-item">
                <a href="/Home/Index">Home</a>
            </li>

            <li class="breadcrumb-item active">
                <strong>@ViewBag.Title</strong>
            </li>
        </ol>
    </div>
</div>

<div class="wrapper wrapper-content animated fadeInRight">
    @if (!User.IsInRole(Usuario.Admin))
    {

        <div class="ibox panel-share d-none">
            <div class="ibox-title" style="display: flex;justify-content: space-between;">
                <h4>Felipe Reinaux's Playground</h4>

            </div>

            <div class="ibox-content">
                <textarea id='editor'></textarea>
            </div>

        </div>
    }
    <div class="ibox">
        <div class="ibox-title" style="display: flex;justify-content: space-between;">
            <h4>@ViewBag.Title</h4>
            <div class="ibox-tools pull-right w-600">
                <div class="row">
                    @if (User.IsInRole(Usuario.Admin) || User.IsInRole(Usuario.Master) || User.IsInRole(Usuario.Monitor))
                    {
                        <div class="col-sm-6">
                            <select class="form-control" id="participante-eventoid" onchange="loadParticipantes()">
                                @foreach (var evento in ViewBag.Eventos)
                                {
                                    <option value="@evento.Id">@evento.TipoEvento @evento.Titulo</option>
                                }
                            </select>
                        </div>
                        <div class="col-sm-6">
                            <select class="form-control" id="participante-participanteid" onchange="getPlayGround()">
                            </select>
                        </div>

                    }
                    else
                    {

                    }
                </div>
            </div>
        </div>
        <div class="ibox-content">
            <div class="row">
                <div class="col col-sm-2" id="col-arquivos">
                    <h3>Arquivos</h3>
                    <ul class="list-playgrounds">
                    </ul>
                </div>
                <div class="col col-sm-10" id="iframe-div">

                    <div class="btn-float-iframe">
                        @if (User.IsInRole(Usuario.Admin))
                        {
                            <button class="btn btn-default btnCast" id="btnCast">SHARE <i class="fab fa-chromecast"></i></button>
                            <button class="btn btn-default btnCast d-none" id="btnStop">STOP <i class="fas fa-stop"></i></button>
                        }
                        <button class="btn btn-default" id="btnSalvar" onclick="modalPlayground()">NEW <i class="fas fa-plus"></i></button>
                        <button class="btn btn-default" id="btnSalvar" onclick="PostPlayground()">SAVE <i class="fas fa-save"></i></button>
                        <button class="btn btn-default" id="btnAtualizar" onclick="getPlayGround('reload')">REFRESH <i class="fas fa-sync"></i></button>
                    </div>
                    <iframe id="playground"
                            frameBorder="0"
                            height="850px"
                            onload="onLoadHandler();"
                            src="https://onecompiler.com/embed/javascript?hideLanguageSelection=true&hideStdin=true&hideNew=true&hideTitle=true&codeChangeEvent=true&listenToEvents=true"
                            width="100%">
                    </iframe>
                </div>
            </div>
        </div>

    </div>
</div>


<div class="modal inmodal" id="modal-playground" role="dialog" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content animated bounceInRight">
            <div class="modal-body">
                <div class="moldura-modal p-h-xs" id="form-playground">
                    <div class="row p-h-xs">
                        <div class="col-sm-6 p-w-md text-center">
                            <h5>Nome</h5>

                            <input type="text" class="form-control required" id="playground-nome" data-field="Nome" />
                        </div>

                    </div>
                </div>

                <div class="modal-footer">
                    <button type="button" class="btn btn-white pull-right m-l-sm" data-dismiss="modal">Fechar</button>
                    <button type="button" class="btn btn-white pull-right" onclick="newPlayground()">Salvar</button>
                </div>
            </div>
        </div>
    </div>

</div>



<script src="~/Scripts/jquery.signalR-2.4.2.min.js"></script>
<script src="~/signalr/hubs"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.35.0/codemirror.js"></script>
<script src="https://codemirror.net/mode/javascript/javascript.js"></script>



@section Styles {
    <style>

        .CodeMirror {
            border: 1px solid #eee;
            height: auto !important;
        }

        .CodeMirror-scroll {
            overflow-y: hidden;
            overflow-x: auto;
        }

        #iframe-div {
            position: relative;
        }

        .btn-float-iframe {
            position: absolute;
            top: 9px;
            right: 166px;
        }

        @@media (max-width: 1045px) {
            .btn-float-iframe {
                top: 25px;
                right: 40px;
            }
        }

        .del-play {
            color: #ed5565;
            font-size: 10px;
        }

        .arquivo {
            cursor: pointer
        }

            .arquivo.selected {
                color: #1ab394;
            }

        .btn-float-iframe button {
            box-shadow: 0px 3px 1px -2px rgb(0 0 0 / 20%), 0px 2px 2px 0px rgb(0 0 0 / 14%), 0px 1px 5px 0px rgb(0 0 0 / 12%);
            background-color: #e91e63;
            border-color: #e91e63;
            color: white;
            height: 32px;
        }

            .btn-float-iframe button i {
                margin-left: 5px;
            }

            .btn-float-iframe button:hover,
            .btn-float-iframe button:focus, .btn-float-iframe button:active:focus, .btn-float-iframe button:active:hover,
            .btn-float-iframe button:active {
                background-color: #a31545;
                border-color: #a31545;
                color: white;
            }
    </style>
}

@section Scripts {

    <script>
        HideMenu()
        var hub = $.connection.socketHub;
        var loading = true;
        sharing = false
        var playground = ''
        var playgroundSelected = {}

        if ('@User.IsInRole(Usuario.Admin)' != 'True') {
            var editor = CodeMirror.fromTextArea(document.getElementById('editor'), {
                mode: "javascript",
                theme: "dracula",
                viewportMargin: Infinity,
                lineNumbers: true,
                readOnly: true,
            });
            editor.save()

            hub.client.populateCode = function (code) {


                    jsonCode = JSON.parse(code)
                    if (jsonCode.sharing) {
                        $('.panel-share').removeClass('d-none')
                    } else {
                        $('.panel-share').addClass('d-none')
                    }
                    editor.getDoc().setValue(jsonCode.files ? jsonCode.files[0].content : '')

            };
        }
        $.connection.hub.start().done(function () {
            loading = false;
            $('.btnCast').click(function () {
                $('.btnCast').toggleClass('d-none')
                sharing = !sharing
                codigoCast = playgroundSelected.Codigo != null ? JSON.parse(playgroundSelected.Codigo) : {}
                codigoCast.sharing = sharing
                hub.server.populateCode(JSON.stringify(codigoCast));
                CookiePlayground(JSON.stringify(codigoCast))
            })
            window.onmessage = function (e) {
                e.data.sharing = sharing
                playground = JSON.stringify(e.data)
                if ('@User.IsInRole(Usuario.Admin)' == 'True') {
                    hub.server.populateCode(playground);
                    CookiePlayground(playground)
                }
            };
            // Wire up Send button to call NewContosoChatMessage on the server.

        });


        function getSharedPlayground() {
            $.ajax({
                url: '/Reuniao/GetSharedPlayground',
                datatype: "json",
                type: "POST",
                success: (data) => {
                    jsonCode = JSON.parse(data.Playground)
                    if (jsonCode && jsonCode.sharing && '@User.IsInRole(Usuario.Admin)' != 'True') {
                        $('.panel-share').removeClass('d-none')

                        editor.getDoc().setValue(jsonCode.files ? jsonCode.files[0].content : '')
                    }
                }
            })
        }

        $(document).ready(function () {
            loadParticipantes()
            getSharedPlayground();
           
        });

        window.onmessage = function (e) {
            playground = JSON.stringify(e.data)
        };

        function CookiePlayground(code) {
            $.ajax({
                url: "/Reuniao/SharingPlayground/",
                datatype: "json",
                type: "POST",
                contentType: 'application/json; charset=utf-8',
                data: JSON.stringify(
                    {
                        code: code
                    }),
                success: function () {
                }
            });
        }

        function newPlayground() {
            if (ValidateForm(`#form-playground`)) {
                $.ajax({
                    url: "/Participante/PostPlayground/",
                    datatype: "json",
                    type: "POST",
                    contentType: 'application/json; charset=utf-8',
                    data: JSON.stringify(
                        {
                            Nome: $('#playground-nome').val().replace(/ /g, "") + ".js",
                            Id: 0,
                            ParticipanteId: $("#participante-participanteid").val()
                        }),
                    success: function () {
                        SuccessMesageOperation();
                        getPlayGround('new')
                        $("#modal-playground").modal("hide");
                    }
                });
            }
        }

        function modalPlayground() {
            $('#playground-nome').val('')
            $("#modal-playground").modal();
        }

        function PostPlayground() {
            $.ajax({
                url: "/Participante/PostPlayground/",
                datatype: "json",
                type: "POST",
                contentType: 'application/json; charset=utf-8',
                data: JSON.stringify(
                    {
                        Nome: JSON.parse(playground).files[0].name,
                        Codigo: playground,
                        Id: playgroundSelected.Id > 0 ? playgroundSelected.Id : 0,
                        ParticipanteId: $("#participante-participanteid").val() || 0
                    }),
                success: function () {
                    SuccessMesageOperation()
                    getPlayGround('reload')
                }
            });

        }

        function onLoadHandler() {
            getPlayGround()
        }

        function loadParticipantes() {
            $.ajax({
                url: '/Participante/GetParticipantesSelect',
                data: { eventoId: $("#participante-eventoid").val() },
                datatype: "json",
                type: "POST",
                success: (result) => {
                    $("#participante-participanteid").html(`
<option value=0>Selecione</option>
${result.data.map(p => `<option value=${p.Id}>${p.Nome}</option>`)}
`)
                }
            });
        }

        function SelectPlayground(p) {
            playgroundSelected = p

            var iFrame = document.getElementById('playground');
            $('.arquivo').removeClass('selected')
            $(`#code${playgroundSelected.Id}`).addClass('selected')
            $.ajax({
                url: '/Participante/GetPlayground',
                datatype: "json",
                type: "POST",
                data: { id: playgroundSelected.Id, participanteId: $("#participante-participanteid").val() || 0 },
                success: (data) => {
                    let currentCodeObj = JSON.parse(JSON.parse(JSON.stringify(data.Playgrounds.Codigo)))
                    if (currentCodeObj) {
                            codigoCast = currentCodeObj
                            codigoCast.sharing = sharing
                            if (!loading && '@User.IsInRole(Usuario.Admin)' == 'True') {
                                hub.server.populateCode(JSON.stringify(codigoCast));
                            }
                        iFrame.contentWindow.postMessage({
                            eventType: 'populateCode',
                            language: currentCodeObj.language,
                            files: currentCodeObj.files,
                        }, "*");
                    } else {
                        var fileObj = [{ name: playgroundSelected.Nome, content: 'console.log("Hello, World!");' }]
                        codigoCast = { sharing, files: fileObj }
                        if (!loading && '@User.IsInRole(Usuario.Admin)' == 'True') {
                            hub.server.populateCode(JSON.stringify(codigoCast));
                        }
                        iFrame.contentWindow.postMessage({
                            eventType: 'populateCode',
                            language: 'javascript',
                            files: fileObj,
                        }, "*");
                    }
                }
            })

        }

        function DeletePlayground(id) {
            ConfirmMessageDelete().then((result) => {
                if (result) {
                    $.ajax({
                        url: "/Participante/DeletePlayground/",
                        datatype: "json",
                        type: "POST",
                        contentType: 'application/json; charset=utf-8',
                        data: JSON.stringify(
                            {
                                id: id
                            }),
                        success: function () {
                            SuccessMesageDelete();
                            getPlayGround();
                        }
                    });
                }
            });
        }

        function getPlayGround(param) {
            $.ajax({
                url: '/Participante/GetPlaygrounds',
                datatype: "json",
                type: "GET",
                data: { id: $("#participante-participanteid").val() || 0 },
                success: (data) => {
                    result = data.Playgrounds;
                    var iFrame = document.getElementById('playground');
                    if (result.length > 0) {
                        $('#col-arquivos').removeClass('d-none')
                        $('#iframe-div').addClass('col-sm-10')
                        $('#iframe-div').removeClass('col-sm-12')

                        $('.list-playgrounds').html(`
                                                                    ${result.map(p => `<li id="code${p.Id}" class="arquivo"><span>${p.Nome}</span> <i onclick='DeletePlayground(${p.Id})' class="fas fa-trash del-play"></i></li>`).join('')}
                                                                `)
                        result.map(p => {
                            $(`#code${p.Id}`).click(function () {                 
                                SelectPlayground(p)
                            })
                        })
                        if (param == 'new') {
                            SelectPlayground(result[result.length - 1])
                        } else if (param == 'reload') {
                            SelectPlayground(playgroundSelected.Id > 0 ? playgroundSelected : result[0])
                        } else {
                            SelectPlayground(result[0])
                        }
                    } else {
                        $('#col-arquivos').addClass('d-none')
                        $('#iframe-div').removeClass('col-sm-10')
                        $('#iframe-div').addClass('col-sm-12')
                        playgroundSelected = {}
                        var arrNome = data.Nome.split(' ');
                        iFrame.contentWindow.postMessage({
                            eventType: 'populateCode',
                            language: 'javascript',
                            files: [{ name: `${arrNome[0]}${arrNome.length > 1 ? arrNome[arrNome.length - 1] : ''}.js`, content: 'console.log("Hello, World!");' }],
                        }, "*");
                        playground = JSON.stringify({
                            language: 'javascript',
                            files: [{ name: `${arrNome[0]}${arrNome.length > 1 ? arrNome[arrNome.length - 1] : ''}.js`, content: 'console.log("Hello, World!");' }],
                        })

                    }
                }
            })
        }
    </script>

}
